{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-client/add-client.component.css","webpack:///./src/app/components/add-client/add-client.component.html","webpack:///./src/app/components/add-client/add-client.component.ts","webpack:///./src/app/components/client-details/client-details.component.css","webpack:///./src/app/components/client-details/client-details.component.html","webpack:///./src/app/components/client-details/client-details.component.ts","webpack:///./src/app/components/clients/clients.component.css","webpack:///./src/app/components/clients/clients.component.html","webpack:///./src/app/components/clients/clients.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/edit-client/edit-client.component.css","webpack:///./src/app/components/edit-client/edit-client.component.html","webpack:///./src/app/components/edit-client/edit-client.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/new-user/new-user.component.css","webpack:///./src/app/components/new-user/new-user.component.html","webpack:///./src/app/components/new-user/new-user.component.ts","webpack:///./src/app/components/not-found/not-found.component.css","webpack:///./src/app/components/not-found/not-found.component.html","webpack:///./src/app/components/not-found/not-found.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/sidebar/sidebar.component.css","webpack:///./src/app/components/sidebar/sidebar.component.html","webpack:///./src/app/components/sidebar/sidebar.component.ts","webpack:///./src/app/components/vendors/vendors.component.css","webpack:///./src/app/components/vendors/vendors.component.html","webpack:///./src/app/components/vendors/vendors.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/client.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ClientsComponent } from './components/clients/clients.component';\nimport { VendorsComponent } from './components/vendors/vendors.component';\nimport { AddClientComponent } from './components/add-client/add-client.component';\nimport { ClientDetailsComponent } from './components/client-details/client-details.component';\nimport { EditClientComponent } from './components/edit-client/edit-client.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { NewUserComponent } from './components/new-user/new-user.component';\n\nimport { AuthGuard } from './guards/auth.guard';\n\n\nconst routes: Routes = [\n  {path: '', component: DashboardComponent, canActivate: [AuthGuard] },\n  {path: 'clients', component: ClientsComponent, canActivate: [AuthGuard] },\n  {path: 'vendors', component: VendorsComponent, canActivate: [AuthGuard] },\n  {path: 'client/add', component: AddClientComponent, canActivate: [AuthGuard] },\n  {path: 'client/:id', component: ClientDetailsComponent, canActivate: [AuthGuard] },\n  {path: 'clients/client/:id', component: ClientDetailsComponent, canActivate: [AuthGuard] },\n  {path: 'client/edit/:id', component: EditClientComponent, canActivate: [AuthGuard] },\n  {path: 'login', component: LoginComponent},\n  {path: 'new/user', component: NewUserComponent, canActivate: [AuthGuard]},\n  {path: '**', component: NotFoundComponent}\n\n]\n\n@NgModule({\n  exports:  [RouterModule],\n  providers: [AuthGuard],\n  imports: [\n    RouterModule.forRoot(routes),\n  ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n\\n<div class=\\\"container\\\">\\n  <flash-messages></flash-messages>\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ibroking';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/Forms';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\nimport { environment } from '../environments/environment';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ClientsComponent } from './components/clients/clients.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { VendorsComponent } from './components/vendors/vendors.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { AddClientComponent } from './components/add-client/add-client.component';\nimport { ClientDetailsComponent } from './components/client-details/client-details.component';\nimport { EditClientComponent } from './components/edit-client/edit-client.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ClientService } from './services/client.service';\nimport { AuthService } from './services/auth.service';\nimport { NewUserComponent } from './components/new-user/new-user.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    ClientsComponent,\n    DashboardComponent,\n    VendorsComponent,\n    SidebarComponent,\n    AddClientComponent,\n    ClientDetailsComponent,\n    EditClientComponent,\n    LoginComponent,\n    NotFoundComponent,\n    RegisterComponent,\n    NewUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    FlashMessagesModule.forRoot(),\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase, 'ibroking'),\n    AngularFirestoreModule,\n    AngularFireAuthModule\n  ],\n  providers: [ClientService, AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRkLWNsaWVudC9hZGQtY2xpZW50LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <a routerLink=\\\"/clients\\\" class=\\\"btn btn-link\\\">\\n        <i class=\\\"fa fa-arrow-circle-o-left\\\"></i> Back to Clients\\n      </a>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n  \\n    </div>\\n  </div>\\n  \\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      Add Client\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <form #clientForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(clientForm)\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"firstName\\\">First Name</label>\\n          <input \\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            name=\\\"firstName\\\"\\n            #clientFirstName=\\\"ngModel\\\"\\n            [ngClass]=\\\"{'is-invalid': clientFirstName.errors && clientFirstName.touched}\\\"\\n            [(ngModel)]=\\\"client.firstName\\\"\\n            minlength=\\\"2\\\"\\n            required\\n          >\\n  \\n          <div [hidden]=\\\"!clientFirstName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n            First name required\\n          </div>\\n  \\n          <div [hidden]=\\\"!clientFirstName.errors?.min-length\\\" class=\\\"invalid-feedback\\\">\\n              Must be at least 2 characters\\n          </div>\\n        </div>\\n  \\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"lastName\\\">Last Name</label>\\n            <input \\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              name=\\\"lastName\\\"\\n              #clientLastName=\\\"ngModel\\\"\\n              [ngClass]=\\\"{'is-invalid': clientLastName.errors && clientLastName.touched}\\\"\\n              [(ngModel)]=\\\"client.lastName\\\"\\n              minlength=\\\"2\\\"\\n              required\\n            >\\n    \\n            <div [hidden]=\\\"!clientLastName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n              Last name required\\n            </div>\\n    \\n            <div [hidden]=\\\"!clientLastName.errors?.min-length\\\" class=\\\"invalid-feedback\\\">\\n                Must be at least 2 characters\\n            </div>\\n          </div>\\n  \\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"email\\\">Email</label>\\n              <input \\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                name=\\\"email\\\"\\n                #clientEmail=\\\"ngModel\\\"\\n                [ngClass]=\\\"{'is-invalid': clientEmail.errors && clientEmail.touched}\\\"\\n                [(ngModel)]=\\\"client.email\\\"\\n                pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\"\\n                required\\n              >\\n      \\n              <div [hidden]=\\\"!clientEmail.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                Email required\\n              </div>\\n      \\n              <div [hidden]=\\\"!clientEmail.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n                  Email is not valid\\n              </div>\\n          </div>\\n  \\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"phone\\\">Phone</label>\\n              <input \\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                name=\\\"phone\\\"\\n                #clientPhone=\\\"ngModel\\\"\\n                [ngClass]=\\\"{'is-invalid': clientPhone.errors && clientPhone.touched}\\\"\\n                [(ngModel)]=\\\"client.phone\\\"\\n                minlength=\\\"11\\\"\\n                required\\n              >\\n      \\n              <div [hidden]=\\\"!clientPhone.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                Phone required\\n              </div>\\n      \\n              <div [hidden]=\\\"!clientPhone.errors?.min-length\\\" class=\\\"invalid-feedback\\\">\\n                  Must be at least 11 characters\\n              </div>\\n          </div>\\n  \\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"address\\\">Address</label>\\n              <input \\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                name=\\\"address\\\"\\n                #clientAddress=\\\"ngModel\\\"\\n                [ngClass]=\\\"{'is-invalid': clientAddress.errors && clientAddress.touched}\\\"\\n                [(ngModel)]=\\\"client.address\\\"\\n                minlength=\\\"2\\\"\\n                required\\n              >\\n      \\n              <div [hidden]=\\\"!clientAddress.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n               Address required\\n              </div>\\n      \\n              <div [hidden]=\\\"!clientAddress.errors?.min-length\\\" class=\\\"invalid-feedback\\\">\\n                  Must be at least 2 characters\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"city\\\">City</label>\\n                <input \\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  name=\\\"city\\\"\\n                  #clientCity=\\\"ngModel\\\"\\n                  [ngClass]=\\\"{'is-invalid': clientCity.errors && clientCity.touched}\\\"\\n                  [(ngModel)]=\\\"client.city\\\"\\n                  minlength=\\\"2\\\"\\n                  required\\n                >\\n        \\n                <div [hidden]=\\\"!clientCity.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                  City required\\n                </div>\\n        \\n                <div [hidden]=\\\"!clientCity.errors?.min-length\\\" class=\\\"invalid-feedback\\\">\\n                    Must be at least 2 characters\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"state\\\">State</label>\\n                  <input \\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    name=\\\"state\\\"\\n                    #clientState=\\\"ngModel\\\"\\n                    [ngClass]=\\\"{'is-invalid': clientState.errors && clientState.touched}\\\"\\n                    [(ngModel)]=\\\"client.state\\\"\\n                    minlength=\\\"2\\\"\\n                    required\\n                  >\\n          \\n                  <div [hidden]=\\\"!clientState.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                    State required\\n                  </div>\\n          \\n                  <div [hidden]=\\\"!clientState.errors?.min-length\\\" class=\\\"invalid-feedback\\\">\\n                      Must be at least 2 characters\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"country\\\">Country</label>\\n                    <input \\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      name=\\\"country\\\"\\n                      #clientCountry=\\\"ngModel\\\"\\n                      [ngClass]=\\\"{'is-invalid': clientCountry.errors && clientCountry.touched}\\\"\\n                      [(ngModel)]=\\\"client.country\\\"\\n                      minlength=\\\"2\\\"\\n                      required\\n                    >\\n            \\n                    <div [hidden]=\\\"!clientCountry.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                      Country required\\n                    </div>\\n            \\n                    <div [hidden]=\\\"!clientCountry.errors?.min-length\\\" class=\\\"invalid-feedback\\\">\\n                        Must be at least 2 characters\\n                    </div>\\n                  </div>\\n  \\n          <input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary btn-block\\\">\\n      </form>\\n    </div>\\n  </div>\\n  \"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { ClientService } from '../../services/client.service';\nimport { Router } from '@angular/router';\n\nimport { Client } from '../../models/Client';\n\n@Component({\n  selector: 'app-add-client',\n  templateUrl: './add-client.component.html',\n  styleUrls: ['./add-client.component.css']\n})\nexport class AddClientComponent implements OnInit {\n  client: Client = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    address: '',\n    city: '',\n    state: '',\n    country: ''\n  }\n\n  @ViewChild('clientForm') form: any;\n\n  constructor(\n    private flashMessage: FlashMessagesService,\n    private clientService: ClientService,\n    private router: Router\n    ) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit({value, valid} : {value: Client, valid: boolean}){\n    if(!valid) {\n      // Show error\n      this.flashMessage.show('Please fill out the form correctly', {\n        cssClass: 'alert-danger', timeout: 4000\n      });\n    } else {\n      // Add new client\n      this.clientService.newClient(value);\n      // Show message\n      this.flashMessage.show('New cliend added', {\n        cssClass: 'alert-success', timeout: 4000\n      });\n      // Redirect to dash\n      this.router.navigate(['/']);\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2xpZW50LWRldGFpbHMvY2xpZW50LWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row mt-4 mb-4\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <a routerLink=\\\"/clients\\\" class=\\\"btn btn-link\\\">\\n      <i class=\\\"fa fa-arrow-circle-o-left\\\"></i> Back to Clients\\n    </a>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n    <div class=\\\"btn-group pull-right\\\">\\n      <a routerLink=\\\"/client/edit/{{ id }}\\\" class=\\\"btn btn-dark\\\">\\n        Edit\\n      </a>\\n      <button (click)=\\\"onDeleteClick()\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n    </div>\\n  </div>\\n</div>\\n<!-- <hr> -->\\n<div *ngIf='client' class=\\\"card\\\">\\n  <div class=\\\"card-header text-center\\\">\\n      <h3>{{ client.firstName }} {{ client.lastName }} </h3>\\n      <p class=\\\"lead\\\"> \\n        {{ client.phone}} | {{ client.email}} <br>\\n        <small>\\n          {{ client.address }},  {{ client.city }}  {{ client.state }},  {{ client.country }}\\n        </small>\\n      </p>\\n  </div>\\n  \\n  <div class=\\\"card-body\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\"> xxxxxxxxxx Details of the Client Policy will go here xxxxxxxxx </li>\\n      <li class=\\\"list-group-item\\\"> xxxxxxxxxx Details of the Client Policy will go here xxxxxxxxx</li>\\n    </ul>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../services/client.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Client } from '../../models/Client';\n\n@Component({\n  selector: 'app-client-details',\n  templateUrl: './client-details.component.html',\n  styleUrls: ['./client-details.component.css']\n})\nexport class ClientDetailsComponent implements OnInit {\n  id: string;\n  client: Client;\n\n  constructor(\n    private clientService: ClientService,\n    private router: Router, \n    private route: ActivatedRoute,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n    // Get id from url\n    this.id = this.route.snapshot.params['id'];\n    // Get client\n    this.clientService.getClient(this.id).subscribe(client => {\n      this.client = client;\n      // console.log(this.client);\n    })\n  }\n\n  onDeleteClick() {\n    if(confirm('Are you sure?')){\n      this.clientService.deleteClient(this.client);\n      this.flashMessage.show('Client removed', {\n        cssClass: 'alert-success', timeout: 4000\n      });\n      this.router.navigate(['/']);\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2xpZW50cy9jbGllbnRzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row mt-4\\\">\\n  <div class=\\\"col-md-10\\\">\\n    <h2><i class=\\\"fa fa-users\\\"></i> Clients</h2>\\n  </div>\\n  <div class=\\\"col-md-2\\\">\\n    <app-sidebar></app-sidebar>\\n  </div>\\n</div>\\n\\n  <table *ngIf=\\\"clients?.length > 0 ; else noClients\\\" class=\\\"table table-striped\\\">\\n    <thead class=\\\"thead-inverse\\\">\\n      <tr>\\n        <th>Name</th>\\n        <th>Email</th>\\n        <th>Phone</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let client of clients\\\">\\n        <td>{{ client.firstName }} {{ client.lastName }}</td>\\n        <td>{{ client.email }}</td>\\n        <td>{{ client.phone }}</td>\\n        <td><a routerLink=\\\"client/{{ client.id }}\\\" class=\\\"btn btn-secondary btn-sm\\\"><i class=\\\"fa fa-arrow-circle-o-right\\\"></i>Details</a></td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  \\n  <ng-template #noClients>\\n    <hr>\\n    <h5>There are no clients in the system</h5>\\n  </ng-template>\"","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../services/client.service';\n\nimport { Client } from '../../models/Client';\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.css']\n})\nexport class ClientsComponent implements OnInit {\n  clients: Client[];\n\n  constructor(private clientService: ClientService) { }\n\n  ngOnInit() {\n    this.clientService.getClients().subscribe(clients => this.clients = clients);\n  }\n\n}\n","module.exports = \".row {\\r\\n    margin: 20px 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucm93IHtcclxuICAgIG1hcmdpbjogMjBweCAwO1xyXG59Il19 */\"","module.exports = \"\\n<div class=\\\"card-deck text-center\\\">\\n    <div class=\\\"card text-white bg-secondary mb-3\\\" style=\\\"max-width: 18rem;\\\">\\n        <div class=\\\"card-body\\\">\\n            <a routerLink=\\\"/clients\\\" class=\\\"text-light\\\">\\n                <i class=\\\"fa fa-users fa-3x\\\"></i>\\n                <h5 class=\\\"card-title mt-3\\\">Clients</h5>\\n            </a>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"card text-white bg-secondary mb-3\\\" style=\\\"max-width: 18rem;\\\">\\n        <div class=\\\"card-body\\\">\\n            <a routerLink=\\\"/\\\" class=\\\"text-light\\\">\\n                <i class=\\\"fa fa-building fa-3x\\\"></i>\\n                <h5 class=\\\"card-title text-center mt-3\\\">Vendors</h5>\\n            </a>\\n        </div>\\n    </div>\\n    \\n    <div class=\\\"card text-white bg-secondary mb-3\\\" style=\\\"max-width: 18rem;\\\">\\n        <div class=\\\"card-body\\\">\\n                <i class=\\\"fa fa-money fa-3x\\\"></i>\\n            <h5 class=\\\"card-title text-center mt-3\\\">Quotation</h5>\\n        </div>\\n    </div>    \\n</div>\\n\\n<div class=\\\"card-deck text-center\\\">\\n    <div class=\\\"card text-white bg-secondary mb-3\\\" style=\\\"max-width: 18rem;\\\">\\n        <div class=\\\"card-body\\\">\\n                <i class=\\\"fa fa-file fa-3x\\\"></i>\\n            <h5 class=\\\"card-title text-center mt-3\\\">Policies</h5>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"card text-white bg-secondary mb-3\\\" style=\\\"max-width: 18rem;\\\">\\n        <div class=\\\"card-body\\\">\\n                <i class=\\\"fa fa-clipboard fa-3x\\\"></i>\\n            <h5 class=\\\"card-title text-center mt-3\\\">Claims</h5>\\n        </div>\\n    </div>\\n    \\n    <div class=\\\"card text-white bg-danger mb-3\\\" style=\\\"max-width: 18rem;\\\">\\n        <div class=\\\"card-body\\\">\\n            <a routerLink=\\\"/users\\\" class=\\\"text-light\\\">\\n                <i class=\\\"fa fa-users fa-3x\\\"></i>\\n                <h5 class=\\\"card-title mt-3\\\">Users</h5>\\n            </a>\\n        </div>\\n    </div>    \\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZWRpdC1jbGllbnQvZWRpdC1jbGllbnQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <a routerLink=\\\"/client/{{ id }}\\\" class=\\\"btn btn-link\\\">\\n        <i class=\\\"fa fa-arrow-circle-o-left\\\"></i> Back to Client\\n      </a>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n  \\n    </div>\\n  </div>\\n  \\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      Edit Client\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <form #clientForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(clientForm)\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"firstName\\\">First Name</label>\\n          <input \\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            name=\\\"firstName\\\"\\n            #clientFirstName=\\\"ngModel\\\"\\n            [ngClass]=\\\"{'is-invalid': clientFirstName.errors && clientFirstName.touched}\\\"\\n            [(ngModel)]=\\\"client.firstName\\\"\\n            minlength=\\\"2\\\"\\n            required\\n          >\\n  \\n          <div [hidden]=\\\"!clientFirstName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n            First name required\\n          </div>\\n  \\n          <div [hidden]=\\\"!clientFirstName.errors?.min-length\\\" class=\\\"invalid-feedback\\\">\\n              Must be at least 2 characters\\n          </div>\\n        </div>\\n  \\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"lastName\\\">Last Name</label>\\n            <input \\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              name=\\\"lastName\\\"\\n              #clientLastName=\\\"ngModel\\\"\\n              [ngClass]=\\\"{'is-invalid': clientLastName.errors && clientLastName.touched}\\\"\\n              [(ngModel)]=\\\"client.lastName\\\"\\n              minlength=\\\"2\\\"\\n              required\\n            >\\n    \\n            <div [hidden]=\\\"!clientLastName.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n              Last name required\\n            </div>\\n    \\n            <div [hidden]=\\\"!clientLastName.errors?.min-length\\\" class=\\\"invalid-feedback\\\">\\n                Must be at least 2 characters\\n            </div>\\n          </div>\\n  \\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"email\\\">Email</label>\\n              <input \\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                name=\\\"email\\\"\\n                #clientEmail=\\\"ngModel\\\"\\n                [ngClass]=\\\"{'is-invalid': clientEmail.errors && clientEmail.touched}\\\"\\n                [(ngModel)]=\\\"client.email\\\"\\n                pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\"\\n                required\\n              >\\n      \\n              <div [hidden]=\\\"!clientEmail.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                Email required\\n              </div>\\n      \\n              <div [hidden]=\\\"!clientEmail.errors?.pattern\\\" class=\\\"invalid-feedback\\\">\\n                  Email is not valid\\n              </div>\\n          </div>\\n  \\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"phone\\\">Phone</label>\\n              <input \\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                name=\\\"phone\\\"\\n                #clientPhone=\\\"ngModel\\\"\\n                [ngClass]=\\\"{'is-invalid': clientPhone.errors && clientPhone.touched}\\\"\\n                [(ngModel)]=\\\"client.phone\\\"\\n                minlength=\\\"11\\\"\\n                required\\n              >\\n      \\n              <div [hidden]=\\\"!clientPhone.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                Phone required\\n              </div>\\n      \\n              <div [hidden]=\\\"!clientPhone.errors?.min-length\\\" class=\\\"invalid-feedback\\\">\\n                  Must be at least 11 characters\\n              </div>\\n          </div>\\n  \\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"address\\\">Address</label>\\n              <input \\n                type=\\\"text\\\"\\n                class=\\\"form-control\\\"\\n                name=\\\"address\\\"\\n                #clientAddress=\\\"ngModel\\\"\\n                [ngClass]=\\\"{'is-invalid': clientAddress.errors && clientAddress.touched}\\\"\\n                [(ngModel)]=\\\"client.address\\\"\\n                minlength=\\\"2\\\"\\n                required\\n              >\\n      \\n              <div [hidden]=\\\"!clientAddress.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n               Address required\\n              </div>\\n      \\n              <div [hidden]=\\\"!clientAddress.errors?.min-length\\\" class=\\\"invalid-feedback\\\">\\n                  Must be at least 2 characters\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"city\\\">City</label>\\n                <input \\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  name=\\\"city\\\"\\n                  #clientCity=\\\"ngModel\\\"\\n                  [ngClass]=\\\"{'is-invalid': clientCity.errors && clientCity.touched}\\\"\\n                  [(ngModel)]=\\\"client.city\\\"\\n                  minlength=\\\"2\\\"\\n                  required\\n                >\\n        \\n                <div [hidden]=\\\"!clientCity.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                  City required\\n                </div>\\n        \\n                <div [hidden]=\\\"!clientCity.errors?.min-length\\\" class=\\\"invalid-feedback\\\">\\n                    Must be at least 2 characters\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"state\\\">State</label>\\n                  <input \\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    name=\\\"state\\\"\\n                    #clientState=\\\"ngModel\\\"\\n                    [ngClass]=\\\"{'is-invalid': clientState.errors && clientState.touched}\\\"\\n                    [(ngModel)]=\\\"client.state\\\"\\n                    minlength=\\\"2\\\"\\n                    required\\n                  >\\n          \\n                  <div [hidden]=\\\"!clientState.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                    State required\\n                  </div>\\n          \\n                  <div [hidden]=\\\"!clientState.errors?.min-length\\\" class=\\\"invalid-feedback\\\">\\n                      Must be at least 2 characters\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"country\\\">Country</label>\\n                    <input \\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      name=\\\"country\\\"\\n                      #clientCountry=\\\"ngModel\\\"\\n                      [ngClass]=\\\"{'is-invalid': clientCountry.errors && clientCountry.touched}\\\"\\n                      [(ngModel)]=\\\"client.country\\\"\\n                      minlength=\\\"2\\\"\\n                      required\\n                    >\\n            \\n                    <div [hidden]=\\\"!clientCountry.errors?.required\\\" class=\\\"invalid-feedback\\\">\\n                      Country required\\n                    </div>\\n            \\n                    <div [hidden]=\\\"!clientCountry.errors?.min-length\\\" class=\\\"invalid-feedback\\\">\\n                        Must be at least 2 characters\\n                    </div>\\n                  </div>\\n  \\n          <input type=\\\"submit\\\" value=\\\"Submit\\\" class=\\\"btn btn-primary btn-block\\\">\\n      </form>\\n    </div>\\n  </div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../services/client.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Client } from '../../models/Client';\n\n@Component({\n  selector: 'app-edit-client',\n  templateUrl: './edit-client.component.html',\n  styleUrls: ['./edit-client.component.css']\n})\nexport class EditClientComponent implements OnInit {\n  id: string;\n  client: Client = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    address: '',\n    city: '',\n    state: '',\n    country: ''\n  }\n\n  constructor(\n    private clientService: ClientService,\n    private router: Router, \n    private route: ActivatedRoute,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n    // Get id from url\n    this.id = this.route.snapshot.params['id'];\n    // Get client\n    this.clientService.getClient(this.id).subscribe(client => this.client = client);\n  }\n\n  onSubmit({value, valid}: {value: Client, valid: boolean}){\n    if(!valid) {\n      this.flashMessage.show('Please fill out the form correctly', {cssClass: 'alert-danger', timeout: 4000});\n    } else {\n      // Add id to client\n      value.id = this.id;\n      // Update client\n      this.clientService.updateClient(value);\n      this.flashMessage.show('Client updated', {cssClass: 'alert-success', timeout: 4000});\n      this.router.navigate(['/client/'+this.id]);\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 mx-auto\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <h1 class=\\\"text-center pb-4 pt-3\\\">\\n            <span class=\\\"text-primary\\\"><i class=\\\"fa fa-lock\\\"></i> iBroking Panel</span> Login\\n          </h1>\\n          <form (submit)=\\\"onSubmit()\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"email\\\">Email</label>\\n              <input type=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" class=\\\"form-control\\\" required>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"password\\\">Password</label>\\n              <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" class=\\\"form-control\\\" required>\\n            </div>\\n            <input type=\\\"submit\\\" value=\\\"Login\\\" class=\\\"btn btn-primary btn-block\\\">\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  email: string;\n  password: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n    ) { }\n\n  ngOnInit() {\n    this.authService.getAuth().subscribe(auth => {\n      if(auth) {\n        this.router.navigate(['/']);\n      }\n    });\n  }\n\n  onSubmit() {\n    this.authService.login(this.email, this.password)\n      .then(res => {\n        this.flashMessage.show('You are now logged in', {\n          cssClass: 'alert-success', timeout: 4000\n        });\n        this.router.navigate(['/']);\n      })\n      .catch(err => {\n        this.flashMessage.show(err.message, {\n          cssClass: 'alert-danger', timeout: 4000\n        })\n      });\n  }\n\n}\n","module.exports = \".navbar{\\r\\n    background:rgb(124, 123, 119);\\r\\n}\\r\\n\\r\\n.navbar a {\\r\\n    color: #fff;\\r\\n    /* font-weight: bold; */\\r\\n}\\r\\n\\r\\nimg{\\r\\n    height: 40px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdmJhcntcclxuICAgIGJhY2tncm91bmQ6cmdiKDEyNCwgMTIzLCAxMTkpO1xyXG59XHJcblxyXG4ubmF2YmFyIGEge1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICAvKiBmb250LXdlaWdodDogYm9sZDsgKi9cclxufVxyXG5cclxuaW1ne1xyXG4gICAgaGVpZ2h0OiA0MHB4O1xyXG59Il19 */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light  mb-4\\\">\\n    <div class=\\\"container\\\">\\n        <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\" ><img src=\\\"../../../assets/kbc-logo.png\\\" alt=\\\"\\\"></a>\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n      \\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n          <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\n              <a routerLink=\\\"/\\\" class=\\\"nav-link\\\">Dashboard</a>\\n            </li>\\n          </ul>\\n          <ul class=\\\"navbar-nav ml-auto\\\">\\n            <li *ngIf=\\\"isLoggedIn\\\" class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" href=\\\"#\\\">{{ loggedInUser }} </a>\\n            </li>\\n            <!-- <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/clients\\\">Clients </a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/vendors\\\">Vendors</a>\\n            </li> -->\\n            <li *ngIf=\\\"!isLoggedIn\\\"  class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\n            </li>\\n            <li *ngIf=\\\"isLoggedIn\\\"  class=\\\"nav-item\\\">\\n              <a href=\\\"#\\\" class=\\\"nav-link\\\" (click)=\\\"onLogoutClick()\\\">Logout</a>\\n            </li>\\n          </ul>\\n        </div>\\n    </div>\\n  </nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Client } from '../../models/Client';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  isLoggedIn: boolean;\n  loggedInUser: string;\n  // showRegister: boolean;\n\n\n  constructor(\n    private authService: AuthService,\n    private router: Router, \n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n    this.authService.getAuth().subscribe(auth => {\n      if(auth) {\n        this.isLoggedIn = true;\n        this.loggedInUser = auth.email;\n      } else {\n        this.isLoggedIn = false;\n      }\n    });\n\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashMessage.show('You are now logged out', {\n      cssClass: 'alert-success', timeout: 4000\n    });\n    this.router.navigate(['/login']);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmV3LXVzZXIvbmV3LXVzZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6 mx-auto\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h1 class=\\\"text-center pb-4 pt-3\\\">\\n          <span class=\\\"text-primary\\\">  </span> Create New User\\n        </h1>\\n        <form (submit)=\\\"onSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Email</label>\\n            <input type=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" class=\\\"form-control\\\" required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password</label>\\n            <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" class=\\\"form-control\\\" required>\\n          </div>\\n          <input type=\\\"submit\\\" value=\\\"Create User\\\" class=\\\"btn btn-primary btn-block\\\">\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-user',\n  templateUrl: './new-user.component.html',\n  styleUrls: ['./new-user.component.css']\n})\nexport class NewUserComponent implements OnInit {\n  email: string;\n  password: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  // onSubmit() {\n  //   this.authService.newUser(this.email, this.password)\n  //     .then(res => {\n  //       this.flashMessage.show('You have created a new user', {\n  //         cssClass: 'alert-success', timeout: 4000\n  //       });\n  //       this.router.navigate(['/']);\n  //     })\n  //     .catch(err => {\n  //       this.flashMessage.show(err.message, {\n  //         cssClass: 'alert-danger', timeout: 4000\n  //       });\n  //     });\n  // }\n\n  onSubmit() {\n    this.authService.newUser(this.email, this.password);\n    this.flashMessage.show('New user created successfully', {\n      cssClass: 'alert-success', timeout: 4000\n    });\n    this.router.navigate(['/'])\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbm90LWZvdW5kL25vdC1mb3VuZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  register works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lkZWJhci9zaWRlYmFyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<a routerLink='/client/add' class=\\\"btn btn-success btn-block mt-4\\\">\\n  <i class=\\\"fa fa-plus\\\"></i> New Client\\n</a>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdmVuZG9ycy92ZW5kb3JzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  vendors works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-vendors',\n  templateUrl: './vendors.component.html',\n  styleUrls: ['./vendors.component.css']\n})\nexport class VendorsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private afAuth: AngularFireAuth\r\n    ) {}\r\n\r\n    canActivate():Observable<boolean> {\r\n        return this.afAuth.authState.pipe(map(auth => {\r\n            if(!auth){\r\n                this.router.navigate(['/login']);\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        }));\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { AngularFireAuth }  from 'angularfire2/auth';\nimport { Observable } from 'rxjs';\nimport { map } from \"rxjs/operators\";\nimport { reject } from 'q';\nimport { initializeApp } from 'firebase';\n\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private afAuth: AngularFireAuth) { }\n\n  login(email: string, password: string){\n    return new Promise((resolve, reject) => {\n      this.afAuth.auth.signInWithEmailAndPassword(email, password)\n      .then(userData => resolve(userData),\n      err => reject(err))\n    });\n  }\n\n  // *** The Auth Service should not be used to create a new user\n  // newUser(email: string, password: string){\n  //   return new Promise((resolve, reject) => {\n  //     this.afAuth.auth.createUserWithEmailAndPassword(email, password)\n  //     .then(userData => resolve(userData),\n  //     err => reject(err))\n  //   });\n  // }\n\n  newUser(email: string, password: string){\n    var secondaryApp = initializeApp(environment.firebase, \"Secondary\");\n\n    secondaryApp.auth().createUserWithEmailAndPassword(email, password);\n    secondaryApp.auth().signOut();\n  }\n\n  \n  \n  \n  getAuth() {\n    return this.afAuth.authState.pipe(map(auth => auth));\n  }\n\n  logout(){\n    this.afAuth.auth.signOut();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Client } from '../models/Client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n  clientsCollection: AngularFirestoreCollection<Client>;\n  clientDoc: AngularFirestoreDocument<Client>;\n  clients: Observable<Client[]>;\n  client: Observable<Client>;\n\n  constructor(private afs: AngularFirestore) { \n    this.clientsCollection = this.afs.collection<Client>('clients', ref => ref.orderBy('lastName', 'asc'));\n  }\n\n  getClients(): Observable<Client[]> {\n    // Get cients with the id\n   this.clients = this.clientsCollection.snapshotChanges().pipe(\n     map(actions => actions.map(a => {\n       const data = a.payload.doc.data() as Client;\n       data.id = a.payload.doc.id;\n       return data; \n     }))\n   )\n     \n    return this.clients;\n  }\n\n  newClient(client: Client) {\n    this.clientsCollection.add(client);\n  }\n\n  getClient(id: string): Observable<Client> {\n    this.clientDoc = this.afs.doc<Client>(`clients/${id}`);\n    this.client = this.clientDoc.snapshotChanges().pipe(\n    map(action => {\n      if(action.payload.exists === false){\n        return null\n      } else {\n        const data = action.payload.data() as Client;\n        data.id = action.payload.id;\n        return data;\n      }\n    }));\n\n    return this.client;\n  }\n\n  updateClient(client: Client) {\n    this.clientDoc = this.afs.doc(`clients/${client.id}`);\n    this.clientDoc.update(client);\n }\n\n  deleteClient(client: Client) {\n      this.clientDoc = this.afs.doc(`clients/${client.id}`);\n      this.clientDoc.delete();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyC26UbAghDAYEHIGJpOZQePgOWtStV_tpg\",\n    authDomain: \"ibroking-6919b.firebaseapp.com\",\n    databaseURL: \"https://ibroking-6919b.firebaseio.com\",\n    projectId: \"ibroking-6919b\",\n    storageBucket: \"\",\n    messagingSenderId: \"232215223548\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}